import { Logger } from "pino";
import { IEvents } from "@walletconnect/jsonrpc-types";
import { IClient } from "./client";
export interface Expiration {
    topic: string;
    expiry: number;
}
export declare namespace ExpirerEvents {
    interface Created {
        topic: string;
        expiration: Expiration;
    }
    interface Deleted {
        topic: string;
        expiration: Expiration;
    }
    interface Expired {
        topic: string;
        expiration: Expiration;
    }
}
export declare abstract class IExpirer extends IEvents {
    client: IClient;
    logger: Logger;
    abstract name: string;
    abstract readonly context: string;
    constructor(client: IClient, logger: Logger);
    abstract init(): Promise<void>;
    abstract has(tag: string): Promise<boolean>;
    abstract set(tag: string, expiration: Expiration): Promise<void>;
    abstract get(tag: string): Promise<Expiration>;
    abstract del(tag: string): Promise<void>;
}
//# sourceMappingURL=expirer.d.ts.map