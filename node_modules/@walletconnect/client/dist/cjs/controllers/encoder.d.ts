import { Logger } from "pino";
import { JsonRpcPayload } from "@walletconnect/jsonrpc-utils";
import { IClient, IEncoder, IRelayerEncoder } from "@walletconnect/types";
export declare class Encoder implements IEncoder {
    client: IClient;
    logger: Logger;
    name: string;
    constructor(client: IClient, logger: Logger);
    get context(): string;
    encode(topic: string, payload: JsonRpcPayload): Promise<string>;
    decode(topic: string, encrypted: string): Promise<JsonRpcPayload>;
}
export declare class RelayerEncoder implements IRelayerEncoder {
    encode(topic: string, payload: JsonRpcPayload): Promise<string>;
    decode(topic: string, message: string): Promise<any>;
}
//# sourceMappingURL=encoder.d.ts.map